import { type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import { SignInButton, useUser } from "@clerk/nextjs";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage, LoadingSpinner } from "~/components/loading";

dayjs.extend(relativeTime);

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex   gap-4 border-b border-slate-400 px-4 py-4">
      <Image
        src={author.prifileImageUrl}
        alt="Profile image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1  text-slate-400">
          <h2 className="">@{author.username}</h2>Â·
          <div className="font-thin">{dayjs(post.createdAt).fromNow()}</div>
        </div>
        <p className="text-xl">{post.content}</p>
      </div>
    </div>
  );
};

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;
  return (
    <div className="flex w-full items-center justify-between ">
      <div className="flex w-full items-center gap-4">
        <Image
          src={user.profileImageUrl}
          alt="Profile image"
          className="h-14 w-14 rounded-full"
          width={56}
          height={56}
        />
        <input
          className="w-full grow rounded border border-slate-400 bg-transparent p-1 px-2 outline-none"
          placeholder="Chirp somethin..."
        />
      </div>
      {/* <div>
    <SignOutButton />
  </div> */}
    </div>
  );
};

const Feed = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) {
    return (
      <div className="mx-auto w-fit">
        <LoadingPage />
      </div>
    );
  }

  if (!data) {
    return <div> No posts yet</div>;
  }

  return (
    <div className="mt-4 ">
      {data?.map((postFull) => (
        <PostView key={postFull.post.id} {...postFull} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded, isSignedIn } = useUser();
  // Start fetching posts asap
  api.posts.getAll.useQuery();
  if (!isLoaded) {
    return (
      <div>
        <LoadingPage />
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Chirp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto h-screen w-full md:max-w-2xl">
        <div className="h-full border-x  border-slate-400  pt-4">
          <div className="border-b px-4 pb-4">
            {!isSignedIn ? (
              <div>
                <h1> Sign in </h1>
                <SignInButton />
              </div>
            ) : (
              <CreatePostWizard />
            )}
          </div>

          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
